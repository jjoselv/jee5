/* Generated by Together */

package patrones.comportamiento.interprete;

import java.util.Properties;

public class Orden2 implements Orden {
    public Orden2() {
        this.siguiente = new Orden3();
    }

    @Override
    public boolean ejecutar(Properties parametros) throws InterpreteException {
        // Write your code here
        if (parametros.getProperty("NOMBRE").equals("ORDEN2")) {
            String valor = parametros.getProperty("PARAMETRO1");
            if (valor == null) {
                throw new InterpreteException("Error de sintaxis en Orden 2.");
            } else {
                System.out.println("Orden 2 ejecutada.");
                return true;
            }
        } else if (getSiguiente() != null) {
            return getSiguiente().ejecutar(parametros);
        }
        else {
            throw new InterpreteException("Orden desconocida");
        }
    }

    @Override
    public Orden getSiguiente() { return siguiente; }

    @Override
    public void setSiguiente(Orden siguiente) { this.siguiente = siguiente; }

    private Orden siguiente;
}

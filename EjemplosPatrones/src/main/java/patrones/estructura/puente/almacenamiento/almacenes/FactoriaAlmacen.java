/* Generated by Together */

package patrones.estructura.puente.almacenamiento.almacenes;

import patrones.estructura.puente.almacenamiento.conexiones.Conexion;
import patrones.estructura.puente.almacenamiento.conexiones.ConexionJDBC;
import patrones.estructura.puente.almacenamiento.conexiones.ConexionArchivo;

abstract public class FactoriaAlmacen {
    public static Almacen obtenerAlmacen(Conexion conexion) {
        Almacen almacen = null;
        if (conexion instanceof ConexionJDBC) {
            almacen = new AlmacenJDBC(conexion);
        } else if (conexion instanceof ConexionArchivo) {
            almacen = new AlmacenArchivo(conexion);
        }
        return almacen;
    }

    /**
     * @link dependency
     * @stereotype instantiate
     */

    /*# Almacen lnkAlmacen; */
}
